[{"C:\\Projects\\Node\\quiz-app\\src\\App.js":"1","C:\\Projects\\Node\\quiz-app\\src\\serviceWorker.js":"2","C:\\Projects\\Node\\quiz-app\\src\\app\\store.js":"3","C:\\Projects\\Node\\quiz-app\\src\\features\\question\\questionSlice.js":"4","C:\\Projects\\Node\\quiz-app\\src\\features\\question\\QuestionEditor.js":"5","C:\\Projects\\Node\\quiz-app\\src\\features\\question\\NewQuestionForm.js":"6","C:\\Projects\\Node\\quiz-app\\src\\features\\quiz\\quizSlice.js":"7","C:\\Projects\\Node\\quiz-app\\src\\features\\quiz\\QuizGame.js":"8","C:\\Projects\\Node\\quiz-app\\src\\index.js":"9","C:\\Projects\\Node\\quiz-app\\src\\features\\quiz\\QuizQuestionPanel.js":"10","C:\\Projects\\Node\\quiz-app\\src\\features\\quiz\\QuizResultsPanel.js":"11"},{"size":882,"mtime":1606342678823,"results":"12","hashOfConfig":"13"},{"size":5141,"mtime":499162500000,"results":"14","hashOfConfig":"13"},{"size":704,"mtime":1606354647822,"results":"15","hashOfConfig":"13"},{"size":1611,"mtime":1606357158452,"results":"16","hashOfConfig":"13"},{"size":2428,"mtime":1606356904156,"results":"17","hashOfConfig":"13"},{"size":2726,"mtime":1606358732970,"results":"18","hashOfConfig":"13"},{"size":570,"mtime":1606340002999,"results":"19","hashOfConfig":"13"},{"size":4320,"mtime":1606356683756,"results":"20","hashOfConfig":"13"},{"size":1093,"mtime":1606343201824,"results":"21","hashOfConfig":"13"},{"size":2380,"mtime":1606349750896,"results":"22","hashOfConfig":"13"},{"size":1325,"mtime":1606356847104,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1i42ust",{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Projects\\Node\\quiz-app\\src\\App.js",["49","50","51"],"C:\\Projects\\Node\\quiz-app\\src\\serviceWorker.js",[],["52","53"],"C:\\Projects\\Node\\quiz-app\\src\\app\\store.js",[],["54","55"],"C:\\Projects\\Node\\quiz-app\\src\\features\\question\\questionSlice.js",[],"C:\\Projects\\Node\\quiz-app\\src\\features\\question\\QuestionEditor.js",[],"C:\\Projects\\Node\\quiz-app\\src\\features\\question\\NewQuestionForm.js",[],"C:\\Projects\\Node\\quiz-app\\src\\features\\quiz\\quizSlice.js",[],"C:\\Projects\\Node\\quiz-app\\src\\features\\quiz\\QuizGame.js",["56"],"import React, { useState } from 'react'; \r\nimport { useSelector } from 'react-redux';\r\nimport { selectAllQuestions } from '../question/questionSlice';\r\nimport { selectUsername } from './quizSlice';\r\nimport { QuizQuestionPanel } from './QuizQuestionPanel';\r\nimport { QuizResultsPanel } from './QuizResultsPanel';\r\nimport { current } from '@reduxjs/toolkit';\r\n\r\nexport function QuizGame() {\r\n\r\n    const selectNextQuestionIndex = (lengthOfArray) => Math.floor(Math.random() * lengthOfArray);\r\n\r\n    const playerName = useSelector(selectUsername);\r\n    const questionsInStore = useSelector(selectAllQuestions);\r\n\r\n    const [remaningQuestions, setRemaningQuestions] = useState(useSelector(selectAllQuestions));\r\n    const [correctQuestions, setCorrectQuestions] = useState([]);\r\n    const [incorrectQuestions, setIncorrectQuestions] = useState([]);\r\n    const [currentQuestionIndex, setCurrentQuestionIndex] = useState(selectNextQuestionIndex(remaningQuestions.length));\r\n    const [currentQuestion, setCurrentQuestion] = useState(remaningQuestions[currentQuestionIndex]);\r\n\r\n\r\n    const headerRow = currentQuestionIndex !== -1 && (\r\n        <div className=\"quiz-header\">\r\n            <div className=\"quiz-header__right-side\">\r\n                <span>{playerName}</span>\r\n            </div>\r\n            <div className=\"quiz-header__left-side\">\r\n                <span className=\"scoreboard__text--green\">{correctQuestions.length}</span><span className=\"scoreboard__text--expanded scoreboard__text--green\"> Helyes válasz, </span><span className=\"scoreboard__text--collapsed\">/</span>\r\n                <span className=\"scoreboard__text--red\">{incorrectQuestions.length}</span><span className=\"scoreboard__text--expanded scoreboard__text--red\"> Helytelen válasz, </span><span className=\"scoreboard__text--collapsed\">/</span>\r\n                <span>{remaningQuestions.length}</span><span className=\"scoreboard__text--expanded\"> Hátralévő kérdés </span><span className=\"scoreboard__text--collapsed\">/</span>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n    const updateScore = (selectedAnswerIndex) => {\r\n        console.log(\"hi1\")\r\n        // Save the results of the previous question\r\n        let newRemaningQuestions = remaningQuestions.filter(() => true);\r\n        const oldQuestion = newRemaningQuestions.splice(currentQuestionIndex, 1)[0];\r\n        setRemaningQuestions(newRemaningQuestions);\r\n\r\n        if (selectedAnswerIndex === oldQuestion.correctAnswer) {\r\n            let newCorrectQuestions = correctQuestions.filter(() => true);\r\n            newCorrectQuestions.push(oldQuestion);\r\n            setCorrectQuestions(newCorrectQuestions);\r\n        } else {\r\n            let newIncorrectQuestions = incorrectQuestions.filter(() => true);\r\n            newIncorrectQuestions.push(oldQuestion);\r\n            setIncorrectQuestions(newIncorrectQuestions);\r\n        }\r\n    }\r\n\r\n    const selectNextQuestion = () => {\r\n        console.log(\"hi2\")\r\n        if (remaningQuestions.length !== 0) {\r\n            const newQuestionIndex = selectNextQuestionIndex(remaningQuestions.length)\r\n            setCurrentQuestionIndex(newQuestionIndex);\r\n            setCurrentQuestion(remaningQuestions[newQuestionIndex])\r\n        }\r\n        else\r\n            setCurrentQuestionIndex(-1);\r\n    };\r\n\r\n    const resetGame = () => {\r\n        setRemaningQuestions(questionsInStore);\r\n        setCorrectQuestions([]);\r\n        setIncorrectQuestions([]);\r\n        const newIndex = selectNextQuestionIndex(questionsInStore.length);\r\n        setCurrentQuestion(questionsInStore[newIndex]);\r\n        setCurrentQuestionIndex(newIndex);\r\n        console.log(currentQuestion);\r\n        console.log(questionsInStore);\r\n        console.log(currentQuestionIndex)\r\n    }\r\n\r\n    console.log(currentQuestion)\r\n    return (\r\n        <div className={\"quiz\" + (currentQuestionIndex === -1 ? \" quiz--results\" : \"\")}>\r\n            {headerRow}\r\n            {currentQuestionIndex !== -1 && currentQuestion && <QuizQuestionPanel key={currentQuestion.id} question={currentQuestion} onQuestionFinished={selectNextQuestion} onAnswerReveal={updateScore}/>}\r\n            {currentQuestionIndex === -1 && <QuizResultsPanel correctAnswers = {correctQuestions.length} incorrectAnswers = {incorrectQuestions.length} resetGame = {resetGame}/>}\r\n        </div>\r\n    );\r\n}","C:\\Projects\\Node\\quiz-app\\src\\index.js",[],"C:\\Projects\\Node\\quiz-app\\src\\features\\quiz\\QuizQuestionPanel.js",["57","58","59","60"],"C:\\Projects\\Node\\quiz-app\\src\\features\\quiz\\QuizResultsPanel.js",[],{"ruleId":"61","severity":1,"message":"62","line":3,"column":8,"nodeType":"63","messageId":"64","endLine":3,"endColumn":12},{"ruleId":"61","severity":1,"message":"65","line":5,"column":10,"nodeType":"63","messageId":"64","endLine":5,"endColumn":28},{"ruleId":"61","severity":1,"message":"66","line":7,"column":10,"nodeType":"63","messageId":"64","endLine":7,"endColumn":21},{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","replacedBy":"70"},{"ruleId":"67","replacedBy":"71"},{"ruleId":"69","replacedBy":"72"},{"ruleId":"61","severity":1,"message":"73","line":7,"column":10,"nodeType":"63","messageId":"64","endLine":7,"endColumn":17},{"ruleId":"74","severity":1,"message":"75","line":22,"column":97,"nodeType":"76","messageId":"77","endLine":22,"endColumn":99},{"ruleId":"74","severity":1,"message":"75","line":22,"column":133,"nodeType":"76","messageId":"77","endLine":22,"endColumn":135},{"ruleId":"74","severity":1,"message":"78","line":22,"column":133,"nodeType":"76","messageId":"77","endLine":22,"endColumn":135},{"ruleId":"74","severity":1,"message":"78","line":22,"column":172,"nodeType":"76","messageId":"77","endLine":22,"endColumn":174},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'selectGameProgress' is defined but never used.","'useSelector' is defined but never used.","no-native-reassign",["79"],"no-negated-in-lhs",["80"],["79"],["80"],"'current' is defined but never used.","no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","Unexpected mix of '||' and '&&'.","no-global-assign","no-unsafe-negation"]