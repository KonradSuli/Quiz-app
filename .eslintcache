[{"C:\\Projects\\Node\\quiz-app\\src\\App.js":"1","C:\\Projects\\Node\\quiz-app\\src\\features\\counter\\counterSlice.js":"2","C:\\Projects\\Node\\quiz-app\\src\\serviceWorker.js":"3","C:\\Projects\\Node\\quiz-app\\src\\app\\store.js":"4","C:\\Projects\\Node\\quiz-app\\src\\features\\question\\questionSlice.js":"5","C:\\Projects\\Node\\quiz-app\\src\\features\\question\\QuestionEditor.js":"6","C:\\Projects\\Node\\quiz-app\\src\\features\\counter\\Counter.js":"7","C:\\Projects\\Node\\quiz-app\\src\\features\\question\\NewQuestionForm.js":"8","C:\\Projects\\Node\\quiz-app\\src\\features\\quiz\\quizSlice.js":"9","C:\\Projects\\Node\\quiz-app\\src\\features\\quiz\\QuizGame.js":"10","C:\\Projects\\Node\\quiz-app\\src\\index.js":"11","C:\\Projects\\Node\\quiz-app\\src\\features\\quiz\\QuizQuestionPanel.js":"12"},{"size":882,"mtime":1606342678823,"results":"13","hashOfConfig":"14"},{"size":1551,"mtime":499162500000,"results":"15","hashOfConfig":"14"},{"size":5141,"mtime":499162500000,"results":"16","hashOfConfig":"14"},{"size":767,"mtime":1606343475384,"results":"17","hashOfConfig":"14"},{"size":1609,"mtime":1606317652555,"results":"18","hashOfConfig":"14"},{"size":2034,"mtime":1606340079610,"results":"19","hashOfConfig":"14"},{"size":1626,"mtime":499162500000,"results":"20","hashOfConfig":"14"},{"size":2565,"mtime":1606318846191,"results":"21","hashOfConfig":"14"},{"size":570,"mtime":1606340002999,"results":"22","hashOfConfig":"14"},{"size":2918,"mtime":1606341093229,"results":"23","hashOfConfig":"14"},{"size":1093,"mtime":1606343201824,"results":"24","hashOfConfig":"14"},{"size":1507,"mtime":1606341021426,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1i42ust",{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Projects\\Node\\quiz-app\\src\\App.js",["52","53","54"],"C:\\Projects\\Node\\quiz-app\\src\\features\\counter\\counterSlice.js",[],"C:\\Projects\\Node\\quiz-app\\src\\serviceWorker.js",[],["55","56"],"C:\\Projects\\Node\\quiz-app\\src\\app\\store.js",[],"C:\\Projects\\Node\\quiz-app\\src\\features\\question\\questionSlice.js",[],"C:\\Projects\\Node\\quiz-app\\src\\features\\question\\QuestionEditor.js",[],"C:\\Projects\\Node\\quiz-app\\src\\features\\counter\\Counter.js",[],"C:\\Projects\\Node\\quiz-app\\src\\features\\question\\NewQuestionForm.js",["57","58"],"import React, { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { addQuestion } from './questionSlice';\r\nimport { nanoid } from '@reduxjs/toolkit';\r\n\r\nexport function NewQuestionForm() {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [question, setQuestion] = useState(\"\");\r\n    const [answers, setAnswers] = useState([\"\", \"\", \"\", \"\"]);\r\n    const [correctAnswerIndex, setCorrectAnswerIndex] = useState(-1);\r\n    const [idPrefix] = useState(nanoid());\r\n\r\n    const isCurrentQuestionFormValid = question !== \"\" && answers.every(value => value !== \"\") && correctAnswerIndex !== -1;\r\n\r\n    const hungarianCounterWords = [\"Első\", \"Második\", \"Harmadik\", \"Negyedik\"];\r\n\r\n    return (\r\n        <div>\r\n            <div className = \"form-group\">\r\n                <label htmlFor = {idPrefix + \"__question_input\"}>Kérdés</label>\r\n                <input id = {idPrefix + \"__question_input\"} type = \"text\" className=\"form-control\" placeholder=\"A kvíz során megjelenített kérdés szövegét írd ide!\"\r\n                    value = {question} onChange = {(event) => {setQuestion(event.target.value)}}></input>\r\n            </div>\r\n            <div className = \"form-group\">\r\n                {answers.map((value, index) => (\r\n                    <div key = {index}>\r\n                        <label htmlFor = {idPrefix + \"__answer_\" + index + \"_input\"}> {hungarianCounterWords[index]} Válaszlehetőség </label>\r\n                        <input id = {idPrefix + \"__answer_\" + index + \"_input\"} value = {value} onChange = {(event) => {let newArray = answers.filter(() => true); newArray[index] = event.target.value;setAnswers(newArray)}}></input>\r\n                        <div className=\"form-check inline_radio_container\">\r\n                            <input className=\"form-check-input position-static inline_radio_container__radio\" type=\"radio\" value = {index} checked = {correctAnswerIndex == index} onChange = {(event) => {setCorrectAnswerIndex(event.target.value)}}></input>\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n            <button onClick={() => {\r\n                    dispatch(addQuestion({questionText: question, answers: answers, correctAnswer: Number(correctAnswerIndex)}))\r\n                    setQuestion(\"\");\r\n                    setAnswers([\"\", \"\", \"\", \"\"]);\r\n                    setCorrectAnswerIndex(-1);\r\n                }}\r\n                disabled = {!isCurrentQuestionFormValid}> Új kérdés hozzáadása </button>\r\n        </div>\r\n    )\r\n};","C:\\Projects\\Node\\quiz-app\\src\\features\\quiz\\quizSlice.js",[],"C:\\Projects\\Node\\quiz-app\\src\\features\\quiz\\QuizGame.js",[],"C:\\Projects\\Node\\quiz-app\\src\\index.js",[],"C:\\Projects\\Node\\quiz-app\\src\\features\\quiz\\QuizQuestionPanel.js",[],{"ruleId":"59","severity":1,"message":"60","line":3,"column":8,"nodeType":"61","messageId":"62","endLine":3,"endColumn":12},{"ruleId":"59","severity":1,"message":"63","line":5,"column":10,"nodeType":"61","messageId":"62","endLine":5,"endColumn":28},{"ruleId":"59","severity":1,"message":"64","line":7,"column":10,"nodeType":"61","messageId":"62","endLine":7,"endColumn":21},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"59","severity":1,"message":"64","line":2,"column":10,"nodeType":"61","messageId":"62","endLine":2,"endColumn":21},{"ruleId":"69","severity":1,"message":"70","line":32,"column":170,"nodeType":"71","messageId":"72","endLine":32,"endColumn":172},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'selectGameProgress' is defined but never used.","'useSelector' is defined but never used.","no-native-reassign",["73"],"no-negated-in-lhs",["74"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]